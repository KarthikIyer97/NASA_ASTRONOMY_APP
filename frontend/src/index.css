@tailwind base;
@tailwind components;
@tailwind utilities;


/* App.css */

.neo-list {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

button {
  transition: all 0.2s ease-in-out;
}

button:hover {
  transform: scale(1.1);
}

/* App.css or appropriate CSS file */

.mySwiper {
  width: 100%; /* Adjusts the width of the Swiper container */
  height: 300px; /* Adjusts the height of the Swiper container */
  margin: 0 auto; /* Centers the Swiper on the page */
}

.swiper-slide {
  display: flex;
  justify-content: center; /* Centers the card within the slide */
  align-items: center; /* Centers the card vertically */
}

/* Styles for navigation buttons */
.swipper-button-next,
.swipper-button-prev {
  color: #fff; /* Change the color of navigation arrows */
}

input {
  background-color: black;
  color: white;
  border: 1px solid gray;
}


/*ðŸ‘‰

âž¡ Customize navigation arrows â¬…
.swiper-button-next, .swiper-button-prev {
  color: white;
}

âž¡ Customize pagination dots â¬…
.swiper-pagination-bullet {
  background-color: white;
}
.swiper-pagination-bullet-active {
  background-color: #ff5722;
}











.swiper_container {
  height: 52rem;
  padding: 2rem 0;
  position: relative;
}

.swiper-slide {
  width: 37rem;
  height: 42rem;
  position: relative;
}

@media (max-width: 500px) {
  .swiper_container {
    height: 47rem;
  }
  .swiper-slide {
    width: 28rem !important;
    height: 36rem !important;
  }
  .swiper-slide img {
    width: 28rem !important;
    height: 36rem !important;
  }
}

.swiper-slide img {
  width: 37rem;
  height: 42rem;
  border-radius: 2rem;
  object-fit: cover;
}

.swiper-slide-shadow-left,
.swiper-slide-shadow-right {
  display: none;
}

.slider-controler {
  position: relative;
  bottom: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.slider-controler .swiper-button-next {
  left: 58% !important;
  transform: translateX(-58%) !important;
}

@media (max-width: 990px) {
  .slider-controler .swiper-button-next {
    left: 70% !important;
    transform: translateX(-70%) !important;
  }
}

@media (max-width: 450px) {
  .slider-controler .swiper-button-next {
    left: 80% !important;
    transform: translateX(-80%) !important;
  }
}

@media (max-width: 990px) {
  .slider-controler .swiper-button-prev {
    left: 30% !important;
    transform: translateX(-30%) !important;
  }
}

@media (max-width: 450px) {
  .slider-controler .swiper-button-prev {
    left: 20% !important;
    transform: translateX(-20%) !important;
  }
}

.slider-controler .slider-arrow {
  background: var(--white);
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  left: 42%;
  transform: translateX(-42%);
  filter: drop-shadow(0px 8px 24px rgba(18, 28, 53, 0.1));
}

.slider-controler .slider-arrow ion-icon {
  font-size: 2rem;
  color: #222224;
}

.slider-controler .slider-arrow::after {
  content: '';
}

.swiper-pagination {
  position: relative;
  width: 15rem !important;
  bottom: 1rem;
}

.swiper-pagination .swiper-pagination-bullet {
  filter: drop-shadow(0px 8px 24px rgba(18, 28, 53, 0.1));
}

.swiper-pagination .swiper-pagination-bullet-active {
  background: var(--primary);
}ðŸ‘ˆ*/

.map{
  width: 100vw;
  height: 100vh;
  position: relative;
}

.location-icon{
  font-size: 1.5rem;
  color: red;
}

.location-marker {
  position: absolute;
  transform: translate(-50%, -50%); /* Center the marker exactly on the coordinates */
  cursor: pointer;
}

/* Fullscreen container with a background image */
.loader-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-image: url('./components/star.gif'); /* Fullscreen background */
  background-size: cover;
  background-position: center;
}



/* Loading text styling */
.loading-text {
  font-size: 3rem;
  color: white;
  font-family: 'Arial', sans-serif;
  letter-spacing: 5px; /* Adds space between letters for better visibility */
  opacity: 0;
  animation: fadeInText 3s steps(10) forwards;
}

/* Keyframes to make each letter of "Loading..." appear one by one */
@keyframes fadeInText {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Make each letter appear progressively */
.loading-text::before {
 
  opacity: 0;
  animation: fadeInLetters 3s steps(10) forwards;
}

@keyframes fadeInLetters {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
